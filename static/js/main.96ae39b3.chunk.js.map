{"version":3,"sources":["graph.js","inputs.js","main.js","App.js","serviceWorker.js","index.js"],"names":["baseStyle","position","width","height","borderRadius","display","marginLeft","transformOrigin","Pie","degree","style","pieColor","invertColor","background","backgroundImage","transform","backgroundColor","Inputs","data","callback","setValues","event","target","name","value","isNaN","parseInt","className","onChange","type","checked","curse","Main","useState","shadeFormDuration","shadeFormCooldown","increasedDuration","cooldownReduction","aspectCatDuration1","aspectCatDuration2","shadeFormIncreasedDuration","aspectCatIncreasedDuration1","aspectCatIncreasedDuration2","increasedCurseEffectiveness","inputs","setInputs","calculatedShadeFormCooldown","tempChainEffective","cappedTempChainEffective","calculatedShadeFormDuration","calculatedAspectCatDuration1","calculatedAspectCatDuration2","padding","color","margin","textAlign","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0PACMA,EACE,CACAC,SAAU,WACVC,MAAO,OACPC,OAAQ,OACRC,aAAc,OALhBJ,EAOK,CACHC,SAAS,WACTI,QAAS,QACTC,WAAY,MACZH,OAAQ,OACRD,MAAO,MACPE,aAAc,sBACdG,gBAAiB,QAuBVC,MApBf,YAAuE,IAAD,IAAxDC,cAAwD,MAAjD,EAAiD,EAA/CC,EAA+C,EAA/CA,MAA+C,IAAzCC,gBAAyC,MAAhC,UAAgC,MAAtBC,mBAAsB,MAAV,QAAU,EAElE,OACI,yBAAKF,MAAOA,GACR,yBAAKA,MAAO,CAACT,SAAU,WAAYC,MAAM,OAAQC,OAAO,SACpD,yBAAKO,MAAK,2BACHV,GADG,IAENa,WAAYF,EACZG,gBAAgB,8CAAD,OAA+CF,EAA/C,WAEnB,yBAAKF,MAAK,2BACFV,GADE,IACgBe,UAAU,UAAD,OAAYN,EAAO,IAAIA,EAAO,IAAIA,EAAlC,SAC3BA,EAAO,IAAI,CAACO,gBAAgBJ,GAAa,CAACI,gBAAiBL,S,OC0BpEM,MAtDf,YAA0C,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,SAAUT,EAAQ,EAARA,MACvBU,EAAY,SAACC,GAAS,IAAD,EACCA,EAAMC,OAAtBC,EADe,EACfA,KAAMC,EADS,EACTA,MACdL,EAAS,2BACFD,GADC,kBAEHK,EAAME,MAAMC,SAASF,IAAQ,EAAEE,SAASF,OAGjD,OACI,yBAAKd,MAAOA,EAAOiB,UAAU,aACzB,6BACI,+BACI,wDACA,2BAAOJ,KAAK,oBAAoBK,SAAUR,IAF9C,MAKJ,6BACI,+BACI,uDACA,2BAAOG,KAAK,oBAAoBK,SAAUR,IAF9C,MAKJ,6BACI,+BACI,oDACA,2BAAOS,KAAK,WAAWN,KAAK,QAAQO,QAAsB,IAAbZ,EAAKa,MAAWP,MAAoB,IAAbN,EAAKa,MAAU,EAAE,EAAGH,SAAUR,KAEtG,+BACI,mEACA,2BAAOG,KAAK,8BAA8BK,SAAUR,IAFxD,MAKJ,6BACI,+BACA,mEACI,2BAAOG,KAAK,6BAA6BK,SAAUR,IAFvD,MAKJ,6BACI,+BACI,gFACA,2BAAOG,KAAK,8BAA8BK,SAAUR,IAFxD,MAKJ,6BACI,+BACI,+EACA,2BAAOG,KAAK,8BAA8BK,SAAUR,IAFxD,QCkFDY,MA7Hf,WAAiB,IAAD,EAEcC,mBAAS,CACnCC,kBAAkB,EAClBC,kBAAkB,GAClBC,kBAAkB,EAClBC,kBAAkB,EAClBN,MAAM,EACNO,mBAAmB,EACnBC,mBAAmB,EACnBC,2BAA2B,EAC3BC,4BAA4B,EAC5BC,4BAA4B,EAC5BC,4BAA4B,IAbhB,mBAEPC,EAFO,KAECC,EAFD,KAgBZX,EAWEU,EAXFV,kBACAC,EAUES,EAVFT,kBACAE,EASEO,EATFP,kBACAD,EAQEQ,EARFR,kBACAL,EAOEa,EAPFb,MACAY,EAMEC,EANFD,4BACAL,EAKEM,EALFN,mBACAC,EAIEK,EAJFL,mBAKIO,EAA8BX,GAAqB,IAAIE,GAAmB,IAE1EU,EAAsBhB,EACxB,EAAI,IAAM,GAAGY,EAA4B,IAAI,KAAO,IACpD,EAEEK,EAA2BD,EAAmB,KAAO,KAAOA,EAE5DE,EAA8Bf,GAAqB,GAAGE,EATxDQ,EAHFJ,4BAYwG,KAAOQ,EAE3GE,EAA+BZ,GAAsB,GAAGF,EAX1DQ,EAFFH,6BAa2G,KAAOO,EAE9GG,EAA+BZ,GAAsB,GAAGH,EAb1DQ,EADFF,6BAc2G,KAAOM,EAEpH,OACE,yBAAKrB,UAAU,OACb,yBAAKA,UAAU,aACb,yBAAKjB,MAAO,CACV0C,QAAQ,SAER,0BACE1C,MAAO,CAAC2C,MAAM,iBADhB,gBAGc3B,SAAuC,IAA9BuB,GAAmC,IAH1D,KAIA,6BACA,0BACEvC,MAAO,CAAC2C,MAAM,cADhB,6BAE4B3B,SAAwC,IAA/BwB,GAAoC,IAFzE,MAGA,6BACA,0BACExC,MAAO,CAAC2C,MAAM,SADhB,kCAEiC3B,SAAwC,IAA/ByB,GAAoC,IAF9E,MAGA,6BACA,0BAAMzC,MAAO,CAAC2C,MAAM,UAApB,yBACyB3B,SAAuC,IAA9BoB,GAAmC,IADrE,MAIF,yBAAKnB,UAAU,UACb,kBAAC,EAAD,CACElB,OAASwC,EAA8BH,EAA8B,IACrEpC,MACE,CACET,SAAS,WACTC,MAAM,QACNC,OAAO,SAGXQ,SAAS,QACTC,YAAY,iBAEd,kBAAC,EAAD,CACEH,OAASyC,EAA+BJ,EAA8B,IACtEpC,MACE,CACET,SAAS,WACTC,MAAM,QACNC,OAAO,QACPmD,OAAQ,YACRvC,UAAU,UAAD,OAAakC,EAA8BH,EAA8B,IAAzE,SAGbnC,SAAS,QACTC,YAAY,cAEd,kBAAC,EAAD,CACEH,OAAS0C,EAA+BL,EAA8B,IACtEpC,MACE,CACET,SAAS,WACTC,MAAM,QACNC,OAAO,QACPmD,OAAQ,cACRvC,UAAU,UAAD,OAAakC,EAA8BH,EAA8B,IAAMI,EAA+BJ,EAA8B,IAA5I,SAGbnC,SAAS,QACTC,YAAY,SAEd,yBAAKF,MAAO,CACVT,SAAS,WACTC,MAAM,OACNC,OAAO,OACPmD,OAAQ,cACRtC,gBAAiB,QACjBZ,aAAa,WAKjB,kBAAC,EAAD,CAAQM,MAAO,CACb6C,UAAU,OACVH,QAAQ,QACPlC,KAAM0B,EAAQzB,SAAU0B,M,MC1GpBW,MAdf,WACE,OACE,yBAAK7B,UAAU,OACb,4BAAQA,UAAU,cAAlB,qCAGA,kBAAC,EAAD,MACA,4BAAQA,UAAU,cAAlB,uBCCc8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.96ae39b3.chunk.js","sourcesContent":["import React from 'react';\nconst baseStyle = {\n    pie:{\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n        borderRadius: '50%',\n    },\n    before:{\n        position:'absolute',\n        display: 'block',\n        marginLeft: '50%',\n        height: '100%',\n        width: '50%',\n        borderRadius: '0 100% 100% 0 / 50%',\n        transformOrigin: 'left',\n    }\n}\nfunction Pie({degree=0,style,pieColor='magenta',invertColor=\"white\"}) {\n    \n    return (\n        <div style={style}>\n            <div style={{position: \"relative\", width:'100%', height:'100%'}}>\n                <div style={{\n                    ...baseStyle.pie,\n                    background: pieColor,\n                    backgroundImage:`linear-gradient(to right, transparent 50%, ${invertColor} 0)`\n                }}></div>\n                <div style={\n                    {...baseStyle.before, transform: `rotate(${degree>180?degree-180:degree}deg)`, ...(\n                        degree>180?{backgroundColor:invertColor}:{backgroundColor: pieColor,}\n                        )}\n                    }></div>\n            </div>\n        </div>\n    )\n}\n\nexport default Pie;","import React from 'react';\n\nfunction Inputs({data, callback, style}) {\n    const setValues = (event)=>{\n        const { name, value } = event.target\n        callback({\n            ...data,\n            [name]:isNaN(parseInt(value))?0:parseInt(value)\n        })\n    }\n    return (\n        <div style={style} className=\"inputarea\">\n            <div>\n                <label>\n                    <span> cooldown Reduction : </span>\n                    <input name=\"cooldownReduction\" onChange={setValues}/>%\n                </label>\n            </div>\n            <div>\n                <label>\n                    <span> increased Duation : </span>\n                    <input name=\"increasedDuration\" onChange={setValues}/>%\n                </label>\n            </div>\n            <div>\n                <label>\n                    <span> temporal chain : </span>\n                    <input type=\"checkbox\" name=\"curse\" checked={data.curse===1} value={data.curse===1?0:1} onChange={setValues}/>\n                </label>\n                <label>\n                    <span> increased Curse Effectiveness : </span>\n                    <input name=\"increasedCurseEffectiveness\" onChange={setValues}/>%\n                </label>\n            </div>\n            <div>\n                <label>\n                <span> shade Form Increased Duration : </span>\n                    <input name=\"shadeFormIncreasedDuration\" onChange={setValues}/>%\n                </label>\n            </div>\n            <div>\n                <label>\n                    <span> first Aspect Of The Cat Increased Duration : </span>\n                    <input name=\"aspectCatIncreasedDuration1\" onChange={setValues}/>%\n                </label>\n            </div>\n            <div>\n                <label>\n                    <span> second Aspect Of The Cat Reduced Duration : </span>\n                    <input name=\"aspectCatIncreasedDuration2\" onChange={setValues}/>%\n                </label>\n            </div>\n        </div>\n    )\n}\n\nexport default Inputs;","import React, { useState } from 'react';\nimport Pie from './graph.js';\nimport Inputs from './inputs.js';\n\nfunction Main() {\n  \n  const [inputs, setInputs] = useState({\n    shadeFormDuration:4,\n    shadeFormCooldown:45,\n    increasedDuration:0,\n    cooldownReduction:0,\n    curse:0,\n    aspectCatDuration1:4,\n    aspectCatDuration2:6,\n    shadeFormIncreasedDuration:0,\n    aspectCatIncreasedDuration1:0,\n    aspectCatIncreasedDuration2:0,\n    increasedCurseEffectiveness:0\n  })\n  const {\n    shadeFormDuration,\n    shadeFormCooldown,\n    cooldownReduction,\n    increasedDuration,\n    curse,\n    increasedCurseEffectiveness,\n    aspectCatDuration1,\n    aspectCatDuration2,\n    shadeFormIncreasedDuration,\n    aspectCatIncreasedDuration1,\n    aspectCatIncreasedDuration2\n  } = inputs\n  const calculatedShadeFormCooldown = shadeFormCooldown * (100-cooldownReduction)/100\n\n  const tempChainEffective = (curse) \n    ? 1 + 40 * (1+(increasedCurseEffectiveness-50)/100) / 100\n    : 1\n\n  const cappedTempChainEffective = tempChainEffective>1.75 ? 1.75 : tempChainEffective\n\n  const calculatedShadeFormDuration = shadeFormDuration * (1+(increasedDuration+shadeFormIncreasedDuration)/100) * cappedTempChainEffective\n\n  const calculatedAspectCatDuration1 = aspectCatDuration1 * (1+(increasedDuration+aspectCatIncreasedDuration1)/100) * cappedTempChainEffective\n\n  const calculatedAspectCatDuration2 = aspectCatDuration2 * (1+(increasedDuration-aspectCatIncreasedDuration2)/100) * cappedTempChainEffective\n  \n  return (\n    <div className=\"App\">\n      <div className=\"grapharea\">\n        <div style={{\n          padding:'20px'\n        }}>\n          <span\n            style={{color:'MediumPurple'}}\n          > \n          Shade Form : {parseInt(calculatedShadeFormDuration * 100)/100}s</span>\n          <br/>\n          <span\n            style={{color:'LimeGreen'}}\n          > Aspect of the Cat Base : {parseInt(calculatedAspectCatDuration1 * 100)/100}s </span>\n          <br/>\n          <span\n            style={{color:'grey'}}\n          > Aspect of the Cat Secondary : {parseInt(calculatedAspectCatDuration2 * 100)/100}s </span>\n          <br/>\n          <span style={{color:'black'}}>\n            Shade Form cooldown : {parseInt(calculatedShadeFormCooldown * 100)/100}s\n          </span>\n        </div>\n        <div className=\"graphs\">\n          <Pie\n            degree={(calculatedShadeFormDuration / calculatedShadeFormCooldown * 360)} \n            style={\n              {\n                position:'absolute',\n                width:\"350px\",\n                height:\"350px\",\n              }\n            }\n            pieColor=\"white\"\n            invertColor=\"MediumPurple\"\n          />\n          <Pie\n            degree={(calculatedAspectCatDuration1 / calculatedShadeFormCooldown * 360)} \n            style={\n              {\n                position:'absolute',\n                width:\"250px\",\n                height:\"250px\",\n                margin: '50px 50px',\n                transform: `rotate(${(calculatedShadeFormDuration / calculatedShadeFormCooldown * 360)}deg)`\n              }\n            }\n            pieColor=\"white\"\n            invertColor=\"LimeGreen\"\n          />\n          <Pie\n            degree={(calculatedAspectCatDuration2 / calculatedShadeFormCooldown * 360)} \n            style={\n              {\n                position:'absolute',\n                width:\"150px\",\n                height:\"150px\",\n                margin: '100px 100px',\n                transform: `rotate(${(calculatedShadeFormDuration / calculatedShadeFormCooldown * 360)+(calculatedAspectCatDuration1 / calculatedShadeFormCooldown * 360)}deg)`\n              }\n            }\n            pieColor=\"white\"\n            invertColor=\"grey\"\n          />\n          <div style={{\n            position:'absolute',\n            width:\"50px\",\n            height:\"50px\",\n            margin: '150px 150px',\n            backgroundColor: 'white',\n            borderRadius:'50%',\n            }}>\n          </div>\n        </div>\n      </div>\n        <Inputs style={{\n          textAlign:\"left\",\n          padding:\"20px\"\n        }} data={inputs} callback={setInputs}/>\n    </div>\n  );\n}\n\nexport default Main;\n","import React from 'react';\nimport Main from './main.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        poe visibility duration simulator\n      </header>\n      <Main/>\n      <footer className=\"App-footer\">\n        prototype - makka\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}